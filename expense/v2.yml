# This file is for EKS
apiVersion: v1
kind: ServiceAccount #required to provide roles to container, otherwise containers will use roles of ec2 instances which cause security concerns
metadata:
  name: frontend
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::492681564023:role/prod-expense-frontend-eks-sa
---
apiVersion: v1
kind: Pod
metadata:
  name: frontend
  labels:   # need to mention so that service can pick the pod as per the selector given in service
    app: frontend
spec:
  serviceAccountName: frontend # required to provide roles to container
  containers:
    - name: frontend
      image: 492681564023.dkr.ecr.us-east-1.amazonaws.com/frontend:2.0.2   # image from aws-ecr along with tag
  imagePullSecrets:  # needed to authenticate k8s to pull image from aws-ecr
    - name: aws-ecr
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: LoadBalancer # required as we need to access frontend through DNS URL
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::492681564023:role/prod-expense-backend-eks-sa
---
apiVersion: v1
kind: Pod
metadata:
  name: backend
  labels:
    app: backend
spec:
  serviceAccountName: backend
  containers:
    - name: backend
      image: 492681564023.dkr.ecr.us-east-1.amazonaws.com/backend:2.0.0
      env: # needed as backend need to communicate to mysql
        - name: DB_HOST # in backend.service file environment is given as DB_HOST --> mentioning the same here
          value: prod-mysql.cluster-ci0wnnvfomah.us-east-1.rds.amazonaws.com
  imagePullSecrets:
    - name: aws-ecr

---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: schema
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::492681564023:role/prod-expense-schema-eks-sa
---
apiVersion: batch/v1 # this section is called as job, similar to pod but this will run only once. if we have 10 backend containers no need of 10 schema pods, one pod does the job, hence going for job
kind: Job
metadata:
  name: schema
spec:
  template:
    spec:
      serviceAccountName: schema
      imagePullSecrets:
        - name: aws-ecr
      restartPolicy: Never
      containers:
        - name: schema
          image: 492681564023.dkr.ecr.us-east-1.amazonaws.com/expense_schema_load:2.0.2 # it requires separate image which needs separate Dockerfile
          env:
            - name: DBHOST
              value: prod-mysql.cluster-ci0wnnvfomah.us-east-1.rds.amazonaws.com
            - name: DBPASS
              value: "expenseprod1234"
            - name: DBUSER
              value: mysqlrdsadmin
            - name: COMPONENT
              value: backend